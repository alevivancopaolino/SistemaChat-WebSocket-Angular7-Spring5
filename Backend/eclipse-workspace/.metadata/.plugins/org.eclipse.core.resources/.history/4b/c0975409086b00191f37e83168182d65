package com.bolsadeideas.springboot.backed.apirest.auth;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer;
import org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter;
import org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer;
import org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer;
import org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer;
import org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter;

@Configuration
@EnableAuthorizationServer
public class AuthorizationServerConfig  extends AuthorizationServerConfigurerAdapter {
	
	@Autowired
	private BCryptPasswordEncoder passwordEncoder;
	
	@Autowired
	@Qualifier("authenticationManager")
	private AuthenticationManager authenticationManager;

	//Aca se configuran los permisos de nuestros de nuestros end-poinds , nuestras rutas de acceso pero de Spring Security de oAuth2
	//tenesmos dos end ponit del AutorizationServer :
	//Uno para autenticarnos para iniciar sesion y se encarga de generar el token y enviarlo al usuario y esta ruta es publica
	 
	@Override
	public void configure(AuthorizationServerSecurityConfigurer security) throws Exception {
		security.tokenKeyAccess("permitAll()")
		.checkTokenAccess("isAuthenticated()");
	}

	//Aca se configura los clientes que van a acceder a mi APi REST en mi caso va a ser solo : "la aplicacion con Angular 7"
	//con su Id y contrace침a o clave privada
	//En tonces vamos a crear los clientes que van a axeder a muestra alicacion backend	
	@Override
	public void configure(ClientDetailsServiceConfigurer clients) throws Exception {		
		clients.inMemory().withClient("angularapp")
		.secret(passwordEncoder.encode("12345"))
		.scopes("read", "write")
		.authorizedGrantTypes("password", "refresh_token")
		.accessTokenValiditySeconds(3600)
		.refreshTokenValiditySeconds(3600);			
	}

	//Aca se genera de todo el proceso de  -> "antentificaci칩n"(en donde se jenera el token si el suario existe en nuestra aplicaci칩n) y
	//validar el token
	
	// Y tambien se validan las rutas en el servidor de aplicacion , proceso de -> "AUTORIZACION"
	@Override
	public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {
		endpoints.authenticationManager(authenticationManager)
				 .accessTokenConverter(accessTokenConverter());
	}

	//Este objeto trabaja con toda la implemetaci칩n para trabajar con el token de "JDT"
	@Bean
	public JwtAccessTokenConverter accessTokenConverter() {
		JwtAccessTokenConverter jwtAccessTokenConverter = new JwtAccessTokenConverter();
		return jwtAccessTokenConverter;
	}
	
	
	
}
